{"version":3,"file":"static/js/990.ac638199.chunk.js","mappings":"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","sources":["shared/controller/useDiagramListContrller.ts","shared/components/SelectDiagram/index.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useDiagramListService } from \"../service/useDiagramListService\";\nimport { listStore } from \"../store/listStore\";\nimport { createController } from \"../utils/createController\";\n\nexport const useDiagramListContrller = createController<\n  [],\n  {\n    handleInit(): void;\n    handleSelectDiagram(id: string): void;\n  }\n>(([]) => {\n  const navigate = useNavigate();\n  const listService = useDiagramListService();\n\n  return {\n    handleInit() {\n      listService.fetchList();\n    },\n    handleSelectDiagram(id: string) {\n      navigate(`/${listStore.getState().type}/${id}`);\n    },\n  };\n});\n","import { Button, Divider, Input, message, Select, Space } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useStore } from \"zustand\";\nimport { useParams } from \"react-router-dom\";\nimport { listStore } from \"../../store/listStore\";\nimport { useDiagramListContrller } from \"../../controller/useDiagramListContrller\";\nimport { DiagramType } from \"../../constants\";\nimport { db } from \"../../../db\";\nimport { useDiagramListService } from \"../../service/useDiagramListService\";\n\nconst DropdownIcon = () => (\n  <label tabIndex={10} className=\"btn btn-ghost btn-circle\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      className=\"inline-block w-5 h-5 stroke-current\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n        d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\"\n      ></path>\n    </svg>\n  </label>\n);\n\nfunction SelectDiagram(props: {\n  onDelete?: () => void;\n  onAdd?: (name: string) => void;\n}) {\n  const { handleInit, handleSelectDiagram } = useDiagramListContrller([]);\n  const { id } = useParams();\n  const diagramList = useStore(listStore, (state) => state.list);\n  const type = useStore(listStore, (state) => state.type);\n  const [name, setName] = useState(\"\");\n  const listService = useDiagramListService();\n\n  useEffect(() => {\n    handleInit();\n  }, []);\n\n  const handleExport = () => {\n    const json = diagramList.reduce((acc, current) => {\n      acc[current.id] = {\n        id: current.id,\n        name: current.name,\n        diagram: current.diagram,\n      };\n      return acc;\n    }, {});\n    const dataStr =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(json));\n    const name = {\n      [DiagramType.deployment]: \"deployments\",\n    }[type];\n    const ele = document.createElement(\"a\");\n    ele.setAttribute(\"href\", dataStr);\n    ele.setAttribute(\"download\", `${name}.json`);\n    ele.click();\n    message.success(\"导出成功\");\n  };\n\n  if (!diagramList.length) {\n    return null;\n  }\n\n  const DiagramSelector = (\n    <Select\n      value={id}\n      className=\"mt-1 pt-px\"\n      showArrow={false}\n      style={{ width: 300 }}\n      placeholder=\"选择图表\"\n      dropdownRender={(menu) => (\n        <>\n          {menu}\n          <Divider style={{ margin: \"8px 0\" }} />\n          <Space style={{ padding: \"0 8px 4px\" }}>\n            <Input\n              bordered={false}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              value={name}\n              placeholder=\"请输入图表名称\"\n            />\n            <Button\n              type=\"text\"\n              onClick={() => {\n                props?.onAdd?.(name);\n                setName(\"\");\n              }}\n            >\n              新建图表\n            </Button>\n          </Space>\n        </>\n      )}\n      bordered={false}\n      options={diagramList.map((item) => ({\n        label: (\n          <div className=\"text-gray-500 font-bold text-base cursor-pointer w-64 whitespace-nowrap overflow-ellipsis overflow-hidden text-right hover:text-gray-800\">\n            {item.name}\n          </div>\n        ),\n        value: item.id,\n      }))}\n      onChange={(id: string) => {\n        handleSelectDiagram(id);\n      }}\n    />\n  );\n\n  const Actions = (\n    <ul\n      tabIndex={10}\n      className=\"menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52\"\n    >\n      <li>\n        <div onClick={() => props?.onDelete?.()}>删除图表</div>\n      </li>\n      <li>\n        <div onClick={handleExport}>导出图表</div>\n      </li>\n      <li>\n        <label htmlFor=\"import\">\n          导入图表{\" \"}\n          <input\n            id=\"import\"\n            type=\"file\"\n            accept=\".json\"\n            className=\"fixed top-0 right-0 ml-96 opacity-0\"\n            style={{\n              top: \"-10000px\",\n            }}\n            onChange={function (e) {\n              const file = e.target.files[0];\n              if (file.type.includes(\"json\")) {\n                const reader = new FileReader();\n                reader.onload = async function () {\n                  const diagrams = JSON.parse(reader.result as string);\n                  await Promise.all(\n                    Object.keys(diagrams).map(async (key) => {\n                      const item = diagrams[key];\n                      await db.deployments.put(item);\n                    })\n                  );\n                  message.success(\"导入成功\");\n                  listService.fetchList();\n                };\n                reader.readAsText(file);\n              }\n            }}\n          />\n        </label>\n      </li>\n    </ul>\n  );\n\n  return (\n    <div className=\"flex items-center\">\n      {DiagramSelector}\n      <div className=\"dropdown dropdown-bottom dropdown-end\">\n        <DropdownIcon />\n        {Actions}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectDiagram;\n"],"names":["useDiagramListContrller","createController","navigate","useNavigate","listService","useDiagramListService","handleInit","fetchList","handleSelectDiagram","id","listStore","type","DropdownIcon","tabIndex","className","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","props","useParams","diagramList","useStore","state","list","useState","name","setName","useEffect","length","DiagramSelector","value","showArrow","style","width","placeholder","dropdownRender","menu","margin","padding","bordered","onChange","e","target","onClick","onAdd","options","map","item","label","Actions","onDelete","json","reduce","acc","current","diagram","dataStr","encodeURIComponent","JSON","stringify","DiagramType","ele","document","createElement","setAttribute","click","message","htmlFor","accept","top","file","files","includes","reader","FileReader","onload","diagrams","parse","result","Promise","all","Object","keys","key","db","readAsText"],"sourceRoot":""}