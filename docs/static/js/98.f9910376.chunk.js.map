{"version":3,"file":"static/js/98.f9910376.chunk.js","mappings":"qQAMaA,EAA2C,WACtD,IAAMC,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,GAClC,ECGuC,WACvC,IAAMC,GAAkBF,EAAAA,EAAAA,GAAWG,EAAAA,GAEnC,MAAO,CACLC,0BAAyB,SAACC,EAAIC,GAC5BJ,EAAgBK,UAAS,SAACC,GAAK,OAC7BC,EAAAA,EAAAA,IAAQD,GAAO,SAACE,GAAW,IAAD,EAClBC,GAASC,EAAAA,EAAAA,IAA2B,QAAjB,EAACF,EAAMG,kBAAU,aAAhB,EAAkBC,KAAMT,GAC7CM,IACLA,EAAOI,QAAUT,EACnB,GAAE,GAEN,EACAU,iBAAgB,SAACC,EAAQC,GACvBhB,EAAgBK,UAAS,SAACC,GAAK,OAC7BC,EAAAA,EAAAA,IAAQD,GAAO,SAACE,GACd,IAAMS,GAAeP,EAAAA,EAAAA,IAAWF,EAAMG,WAAWC,KAAMI,GACvD,IAAKC,GAA6B,OAAZA,QAAY,IAAZA,IAAAA,EAAcC,YAClC,MAAM,IAAIC,MAAM,YAAD,OAAaH,EAAM,8BAEpC,IAAMI,GAAeV,EAAAA,EAAAA,IAAWF,EAAMG,WAAWC,KAAMG,GACvD,GAAgB,OAAZK,QAAY,IAAZA,GAAAA,EAAcF,cAAeR,EAAAA,EAAAA,IAAWU,EAAcJ,GACxD,MAAM,IAAIG,MAAM,sBAAD,OAAQJ,EAAM,6DAAaC,EAAM,YAElD,IAAMK,GAAUC,EAAAA,EAAAA,IAAad,EAAMG,WAAWC,KAAMG,GACpD,IAAKM,EACH,MAAM,IAAIF,MAAM,kCAAD,OAAUH,KAE3BO,EAAAA,EAAAA,IAAaN,EAAcI,EAC7B,GAAE,GAEN,EACAG,aAAY,SAACrB,GACXH,EAAgBK,UAAS,SAACC,GAAK,OAC7BC,EAAAA,EAAAA,IAAQD,GAAO,SAACE,IACEc,EAAAA,EAAAA,IAAad,EAAMG,WAAWC,KAAMT,KAEpDK,EAAMiB,gBAAkBjB,EAAMG,WAAWC,KAAKT,IAC9CuB,EAAAA,EAAAA,IAAkBlB,EAAMG,WAAYR,GACtC,GAAE,GAEN,EACAwB,kBAAiB,SAACZ,EAAQC,GACxBhB,EAAgBK,UAAS,SAACC,GAAK,OAC7BC,EAAAA,EAAAA,IAAQD,GAAO,SAACE,GACV,CAACO,EAAQC,GAAQY,SAASpB,EAAMG,WAAWC,KAAKT,MAGpD0B,EAAAA,EAAAA,IAAYrB,EAAMG,WAAYI,EAAQC,EACxC,GAAE,GAEN,EAEJ,CDnDMc,GAJFH,EAAiB,EAAjBA,kBACAb,EAAgB,EAAhBA,iBACAU,EAAY,EAAZA,aACAtB,EAAyB,EAAzBA,0BAcF,OAZA6B,EAAAA,EAAAA,GAAgBlC,EAAemC,WAAW,YAAqB,IAAlB7B,EAAE,EAAFA,GAAIa,EAAM,EAANA,OAC/CW,EAAkBxB,EAAIa,EACxB,KACAe,EAAAA,EAAAA,GAAgBlC,EAAeoC,OAAO,YAAqB,IAAlB9B,EAAE,EAAFA,GAAIa,EAAM,EAANA,OAC3CF,EAAiBX,EAAIa,EACvB,KACAe,EAAAA,EAAAA,GAAgBlC,EAAeqC,QAAQ,YAAoB,IAAjB/B,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAC5CF,EAA0BC,EAAIC,EAChC,KACA2B,EAAAA,EAAAA,GAAgBlC,EAAesC,SAAS,YAAa,IAAVhC,EAAE,EAAFA,GACzCqB,EAAarB,EACf,IACO,IACT,EAEA,G","sources":["pages/DeploymentEditor/components/PopoverOperations/components/AsyncUseObjectDetailController/index.tsx","pages/DeploymentEditor/controller/useObjectDetailController.ts"],"sourcesContent":["import { useSubscription } from \"observable-hooks\";\nimport React from \"react\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { useObjectDetailController } from \"../../../../controller/useObjectDetailController\";\nimport { PopoverOperationSubjectIdentifier } from \"../../observable/PopoverOperationSubjects\";\n\nexport const AsyncUseObjectDetailController: React.FC = () => {\n  const subjectService = useService(PopoverOperationSubjectIdentifier);\n  const {\n    handleAddRelation,\n    handleMoveObject,\n    handleDelete,\n    handleSelectObjectBgColor,\n  } = useObjectDetailController();\n  useSubscription(subjectService.relation$, ({ id, target }) => {\n    handleAddRelation(id, target);\n  });\n  useSubscription(subjectService.move$, ({ id, target }) => {\n    handleMoveObject(id, target);\n  });\n  useSubscription(subjectService.color$, ({ id, color }) => {\n    handleSelectObjectBgColor(id, color);\n  });\n  useSubscription(subjectService.delete$, ({ id }) => {\n    handleDelete(id);\n  });\n  return null;\n};\n\nexport default AsyncUseObjectDetailController;\n","import {\n  addRelation,\n  findObject,\n  insertObject,\n  removeAllRelation,\n  removeObject,\n} from \"../../../core/entities/Deployment\";\nimport { deploymentStoreIdentifier } from \"../store/deploymentStore\";\nimport { useService } from \"../../../shared/libs/di/react/useService\";\nimport { produce } from \"immer\";\n\nexport const useObjectDetailController = () => {\n  const deploymentStore = useService(deploymentStoreIdentifier);\n\n  return {\n    handleSelectObjectBgColor(id, color) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          const object = findObject(draft.deployment?.root, id);\n          if (!object) return;\n          object.bgColor = color;\n        })\n      );\n    },\n    handleMoveObject(origin, target) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          const targetObject = findObject(draft.deployment.root, target);\n          if (!targetObject || !targetObject?.isContainer) {\n            throw new Error(`targetId ${target} 不是容器`);\n          }\n          const originObject = findObject(draft.deployment.root, origin);\n          if (originObject?.isContainer && findObject(originObject, target)) {\n            throw new Error(`父对象 ${origin} 不能移动到子对象 ${target} 中`);\n          }\n          const removed = removeObject(draft.deployment.root, origin);\n          if (!removed) {\n            throw new Error(`找不到对象 ${target}`);\n          }\n          insertObject(targetObject, removed);\n        })\n      );\n    },\n    handleDelete(id) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          const removed = removeObject(draft.deployment.root, id);\n          if (!removed) return;\n          draft.currentObjectId = draft.deployment.root.id;\n          removeAllRelation(draft.deployment, id);\n        })\n      );\n    },\n    handleAddRelation(origin, target) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          if ([origin, target].includes(draft.deployment.root.id)) {\n            return;\n          }\n          addRelation(draft.deployment, origin, target);\n        })\n      );\n    },\n  };\n};\n"],"names":["AsyncUseObjectDetailController","subjectService","useService","PopoverOperationSubjectIdentifier","deploymentStore","deploymentStoreIdentifier","handleSelectObjectBgColor","id","color","setState","state","produce","draft","object","findObject","deployment","root","bgColor","handleMoveObject","origin","target","targetObject","isContainer","Error","originObject","removed","removeObject","insertObject","handleDelete","currentObjectId","removeAllRelation","handleAddRelation","includes","addRelation","useObjectDetailController","useSubscription","relation$","move$","color$","delete$"],"sourceRoot":""}