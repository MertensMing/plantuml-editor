{"version":3,"file":"static/js/51.64c4de51.chunk.js","mappings":"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","sources":["pages/DeploymentEditor/components/SideOperations/components/JsonContent/index.tsx","pages/DeploymentEditor/components/SideOperations/components/Relations/index.tsx","pages/DeploymentEditor/controller/useObjectRelationController.ts","pages/DeploymentEditor/components/SideOperations/components/Comments/index.tsx","pages/DeploymentEditor/components/SideOperations/components/ObjectName/index.tsx","pages/DeploymentEditor/components/SideOperations/components/LineType/index.tsx","pages/DeploymentEditor/components/SideOperations/index.tsx"],"sourcesContent":["import { useStore } from \"zustand\";\nimport shallow from \"zustand/shallow\";\nimport {\n  findObject,\n  ObjectType,\n} from \"../../../../../../core/entities/Deployment\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { pick } from \"../../../../../../shared/utils/pick\";\nimport { useObjectController } from \"../../../../controller/useObjectController\";\nimport { deploymentStoreIdentifier } from \"../../../../store/deploymentStore\";\n\nfunction JsonContent() {\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  const { handleContentChange } = useObjectController();\n  const { currentObjectId } = useStore(\n    deploymentStore,\n    (state) => pick(state, [\"currentObjectId\"]),\n    shallow\n  );\n  const currentObject = useStore(\n    deploymentStore,\n    (state) =>\n      !state.deployment?.root\n        ? undefined\n        : findObject(state.deployment?.root, state.currentObjectId),\n    shallow\n  );\n\n  return (\n    <>\n      {currentObject &&\n        !currentObject.isContainer &&\n        currentObject.type === ObjectType.json && (\n          <div className=\"pt-8\">\n            <h3 className=\"pb-2 text-sm font-bold\">内容</h3>\n            <textarea\n              className=\"textarea textarea-bordered leading-4 scrollbar-thin scrollbar-thumb-slate-300\"\n              value={currentObject.content || \"\"}\n              onChange={(e) => {\n                handleContentChange(currentObjectId, e.target.value);\n              }}\n              rows={10}\n            />\n          </div>\n        )}\n    </>\n  );\n}\n\nexport default JsonContent;\n","import { useStore } from \"zustand\";\nimport shallow from \"zustand/shallow\";\nimport {\n  findObject,\n  RelationType,\n} from \"../../../../../../core/entities/Deployment\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { pick } from \"../../../../../../shared/utils/pick\";\nimport { useObjectRelationController } from \"../../../../controller/useObjectRelationController\";\nimport { deploymentStoreIdentifier } from \"../../../../store/deploymentStore\";\nimport { ColorPicker } from \"../../../ColorPicker\";\n\nfunction Relations() {\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  const { handleDeleteRelation, handleRelationChange } =\n    useObjectRelationController();\n  const { currentObjectId, deployment } = useStore(\n    deploymentStore,\n    (state) => pick(state, [\"currentObjectId\", \"deployment\"]),\n    shallow\n  );\n  const relations = deployment?.relations?.[currentObjectId] ?? [];\n\n  return (\n    <>\n      {relations?.length > 0 && (\n        <div className=\"pt-8\">\n          <h3 className=\"pb-2 text-sm font-bold\">对象关系</h3>\n          <div className=\"-mb-5\">\n            {relations.map((item, idx) => {\n              const to = findObject(deployment.root, item.to);\n              return (\n                <div className=\"pb-5 pt-2\" key={idx}>\n                  <div>\n                    <div className=\"flex space-x-1 pb-2\">\n                      <div className=\"flex items-center mr-4\">\n                        <span className=\"mr-2 text-sm\">连线</span>\n                        <ColorPicker\n                          color={item.linkColor || \"#000000\"}\n                          onChange={(color) => {\n                            handleRelationChange(\n                              currentObjectId,\n                              item.id,\n                              \"linkColor\",\n                              color\n                            );\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex items-center mr-4\">\n                        <span className=\"mr-2 text-sm\">文字</span>\n                        <ColorPicker\n                          color={item.descColor || \"#000000\"}\n                          onChange={(color) => {\n                            handleRelationChange(\n                              currentObjectId,\n                              item.id,\n                              \"descColor\",\n                              color\n                            );\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-control pb-2\">\n                      <label className=\"input-group input-group-sm\">\n                        <span>目标</span>\n                        <input\n                          value={to?.name}\n                          disabled\n                          className=\"bg-slate-50 px-1\"\n                        ></input>\n                      </label>\n                    </div>\n                    <div className=\"form-control pb-2\">\n                      <label className=\"input-group input-group-xs\">\n                        <span>描述</span>\n                        <input\n                          type=\"text\"\n                          className=\"input input-bordered input-xs w-36\"\n                          value={item.name}\n                          onChange={(e) =>\n                            handleRelationChange(\n                              currentObjectId,\n                              item.id,\n                              \"name\",\n                              e.target.value\n                            )\n                          }\n                        />\n                      </label>\n                    </div>\n                    <div className=\"form-control pb-2\">\n                      <label className=\"input-group input-group-xs\">\n                        <span>类型</span>\n                        <select\n                          value={item.type}\n                          className=\"select select-bordered select-xs\"\n                          onChange={(e) => {\n                            handleRelationChange(\n                              currentObjectId,\n                              item.id,\n                              \"type\",\n                              e.target.value as RelationType\n                            );\n                          }}\n                        >\n                          <option value={RelationType.dependency}>依赖</option>\n                          <option value={RelationType.association}>关联</option>\n                          <option value={RelationType.composition}>组合</option>\n                          <option value={RelationType.aggregation}>聚合</option>\n                          <option value={RelationType.realize}>实现</option>\n                          <option value={RelationType.generalization}>\n                            继承\n                          </option>\n                        </select>\n                      </label>\n                    </div>\n                    <div className=\"flex pb-2\">\n                      <div className=\"form-control\">\n                        <label className=\"input-group input-group-xs\">\n                          <span>方向</span>\n                          <select\n                            value={item.linkDirection}\n                            className=\"select select-bordered select-xs\"\n                            onChange={(e) => {\n                              handleRelationChange(\n                                currentObjectId,\n                                item.id,\n                                \"linkDirection\",\n                                (e.target.value === \"-\"\n                                  ? \"\"\n                                  : e.target.value) as any\n                              );\n                            }}\n                          >\n                            <option value={\"up\"}>上</option>\n                            <option value={\"down\"}>下</option>\n                            <option value={\"left\"}>左</option>\n                            <option value={\"right\"}>右</option>\n                            <option value={\"-\"}>自动</option>\n                          </select>\n                        </label>\n                      </div>\n                      <button\n                        onClick={() =>\n                          handleDeleteRelation(item.origin, item.to)\n                        }\n                        className=\"btn btn-ghost btn-error btn-xs ml-1\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-4 w-4\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M6 18L18 6M6 6l12 12\"\n                          />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Relations;\n","import { removeRelation } from \"../../../core/entities/Deployment\";\nimport { deploymentStoreIdentifier } from \"../store/deploymentStore\";\nimport { useService } from \"../../../shared/libs/di/react/useService\";\nimport { produce } from \"immer\";\n\nexport const useObjectRelationController = () => {\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  return {\n    handleDeleteRelation(origin, to) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          removeRelation(draft.deployment, origin, to);\n        })\n      );\n    },\n    handleRelationChange(id, relationId, field, value) {\n      deploymentStore.setState((state) =>\n        produce(state, (draft) => {\n          const relations = draft.deployment.relations[id] || [];\n          const relation = relations.find((item) => item.id === relationId);\n          if (!relation) return;\n          relation[field] = value;\n        })\n      );\n    },\n  };\n};\n","import { useStore } from \"zustand\";\nimport shallow from \"zustand/shallow\";\nimport {\n  ContainerObjectType,\n  findObject,\n} from \"../../../../../../core/entities/Deployment\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { pick } from \"../../../../../../shared/utils/pick\";\nimport { useObjectController } from \"../../../../controller/useObjectController\";\nimport { deploymentStoreIdentifier } from \"../../../../store/deploymentStore\";\n\nexport function Comments() {\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  const { handleCommentChange } = useObjectController();\n\n  const { currentObjectId } = useStore(\n    deploymentStore,\n    (state) =>\n      pick(state, [\"currentObjectId\", \"deployment\", \"svgUrl\", \"uml\", \"pngUrl\"]),\n    shallow\n  );\n  const currentObject = useStore(\n    deploymentStore,\n    (state) =>\n      !state.deployment?.root\n        ? undefined\n        : findObject(state.deployment?.root, state.currentObjectId),\n    shallow\n  );\n  const isRoot = currentObject?.type === ContainerObjectType.diagram;\n\n  return (\n    <>\n      {!isRoot && (\n        <div className=\"pt-8\">\n          <h3 className=\"pb-2 text-sm font-bold flex items-center\">\n            注释{\" \"}\n            <select\n              value={currentObject?.comment?.direction || \"right\"}\n              className=\"select select-bordered select-xs ml-3\"\n              onChange={(e) => {\n                handleCommentChange(currentObjectId, {\n                  direction: e.target.value,\n                  content: currentObject?.comment?.content,\n                });\n              }}\n            >\n              <option value={\"top\"}>上</option>\n              <option value={\"right\"}>右</option>\n              <option value={\"bottom\"}>下</option>\n              <option value={\"left\"}>左</option>\n            </select>\n          </h3>\n          <textarea\n            className=\"textarea textarea-bordered leading-4 scrollbar-thin scrollbar-thumb-slate-300\"\n            value={currentObject?.comment?.content || \"\"}\n            onChange={(e) => {\n              handleCommentChange(currentObjectId, {\n                direction: currentObject?.comment?.direction || \"right\",\n                content: e.target.value,\n              });\n            }}\n            rows={10}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n","import { useStore } from \"zustand\";\nimport shallow from \"zustand/shallow\";\nimport {\n  DEFAULT_NAME,\n  findObject,\n} from \"../../../../../../core/entities/Deployment\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { pick } from \"../../../../../../shared/utils/pick\";\nimport { useObjectController } from \"../../../../controller/useObjectController\";\nimport { deploymentStoreIdentifier } from \"../../../../store/deploymentStore\";\n\nexport const ObjectName = function () {\n  const { handleObjectNameChange } = useObjectController();\n\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  const { currentObjectId } = useStore(\n    deploymentStore,\n    (state) => pick(state, [\"currentObjectId\", \"deployment\"]),\n    shallow\n  );\n  const currentObject = useStore(\n    deploymentStore,\n    (state) =>\n      !state.deployment?.root\n        ? undefined\n        : findObject(state.deployment?.root, state.currentObjectId),\n    shallow\n  );\n\n  return (\n    <div className=\"pt-8\">\n      <h3 className=\"pb-2 text-sm font-bold\">名称</h3>\n      <div>\n        <div>\n          <input\n            type=\"text\"\n            className=\"input input-bordered input-sm\"\n            value={currentObject?.name || DEFAULT_NAME}\n            onChange={(e) =>\n              handleObjectNameChange(currentObjectId, e.target.value)\n            }\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useStore } from \"zustand\";\nimport shallow from \"zustand/shallow\";\nimport { LineType as ILineType } from \"../../../../../../core/entities/Deployment\";\nimport { useService } from \"../../../../../../shared/libs/di/react/useService\";\nimport { pick } from \"../../../../../../shared/utils/pick\";\nimport { useObjectController } from \"../../../../controller/useObjectController\";\nimport { deploymentStoreIdentifier } from \"../../../../store/deploymentStore\";\n\nexport const LineType = function () {\n  const { handleLineTypeChange } = useObjectController();\n  const deploymentStore = useService(deploymentStoreIdentifier);\n  const { deployment } = useStore(\n    deploymentStore,\n    (state) => pick(state, [\"currentObjectId\", \"deployment\"]),\n    shallow\n  );\n  return (\n    <div>\n      <h3 className=\"pb-2 text-sm font-bold\">连线样式</h3>\n      <div className=\"flex items-center\">\n        <div className=\"form-control\">\n          <label className=\"input-group input-group-sm\">\n            <span>类型</span>\n            <select\n              value={deployment?.linetype}\n              className=\"select select-bordered select-sm\"\n              onChange={(e) => {\n                handleLineTypeChange(e.target.value as ILineType);\n              }}\n            >\n              <option value={\"default\" as ILineType}>Default</option>\n              <option value={\"ortho\" as ILineType}>Ortho</option>\n              <option value={\"polyline\" as ILineType}>Polyline</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import JsonContent from \"./components/JsonContent\";\nimport Relations from \"./components/Relations\";\nimport { Comments } from \"./components/Comments\";\nimport { ObjectName } from \"./components/ObjectName\";\nimport { LineType } from \"./components/LineType\";\n\nexport const SideOperations = function () {\n  return (\n    <div>\n      <LineType />\n      <ObjectName />\n      <JsonContent />\n      <Comments />\n      <Relations />\n    </div>\n  );\n};\n\nexport default SideOperations;\n"],"names":["deploymentStore","useService","deploymentStoreIdentifier","handleContentChange","useObjectController","currentObjectId","useStore","state","pick","shallow","currentObject","deployment","root","findObject","undefined","isContainer","type","ObjectType","className","value","content","onChange","e","target","rows","handleDeleteRelation","origin","to","setState","produce","draft","removeRelation","handleRelationChange","id","relationId","field","relation","relations","find","item","useObjectRelationController","length","map","idx","ColorPicker","color","linkColor","descColor","name","disabled","RelationType","linkDirection","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Comments","handleCommentChange","isRoot","ContainerObjectType","comment","direction","ObjectName","handleObjectNameChange","DEFAULT_NAME","LineType","handleLineTypeChange","linetype","SideOperations"],"sourceRoot":""}